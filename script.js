// Dashboard Plan√©taire - Bandeau d'actualit√©s France24
// Version 1.0 - Octobre 2025
console.log('üìÑ Script Dashboard charg√©');

// Configuration
const CONFIG = {
    rss: {
        apiUrl: 'https://api.rss2json.com/v1/api.json?rss_url=https://www.france24.com/fr/rss',
        refreshInterval: 300000, // 5 minutes
        shuffleInterval: 120000, // 2 minutes
        maxNews: 10
    },
    performance: {
        scrollThreshold: 100
    }
};

// Gestionnaire de performance et scroll
const PerformanceManager = {
    isScrolledDown: false,
    newsTickerPaused: false,
    
    init() {
        this.setupScrollDetection();
        console.log('‚úÖ Performance Manager initialis√©');
    },
    
    setupScrollDetection() {
        let scrollTimeout;
        window.addEventListener('scroll', () => {
            clearTimeout(scrollTimeout);
            scrollTimeout = setTimeout(() => {
                const scrollY = window.scrollY;
                const shouldPause = scrollY > CONFIG.performance.scrollThreshold;
                if (shouldPause !== this.isScrolledDown) {
                    this.isScrolledDown = shouldPause;
                    this.toggleNewsAnimation(shouldPause);
                }
            }, 100);
        });
    },
    
    toggleNewsAnimation(pause) {
        const ticker = document.querySelector('.news-ticker');
        if (!ticker) return;
        
        if (pause && !this.newsTickerPaused) {
            ticker.style.animationPlayState = 'paused';
            this.newsTickerPaused = true;
            console.log('‚è∏Ô∏è Animation pause - √âconomie m√©moire');
        } else if (!pause && this.newsTickerPaused) {
            ticker.style.animationPlayState = 'running';
            this.newsTickerPaused = false;
            console.log('‚ñ∂Ô∏è Animation reprise');
        }
    }
};

// Gestionnaire d'actualit√©s France24
const NewsManager = {
    currentNews: [],
    isLoading: false,
    hasError: false,
    refreshTimer: null,
    shuffleTimer: null,
    
    fallbackNews: [
        'D√©veloppements technologiques majeurs dans le secteur de l\'intelligence artificielle',
        'Initiatives climatiques mondiales et transitions √©nerg√©tiques en cours',
        '√âvolutions g√©opolitiques et diplomatie internationale r√©cente',
        'Actualit√©s √©conomiques et tendances des march√©s financiers mondiaux',
        'Innovations en mati√®re d\'√©nergie renouvelable et d√©veloppement durable',
        'Coop√©ration internationale et nouveaux accords multilat√©raux',
        'Avanc√©es scientifiques r√©centes et d√©couvertes de recherche',
        'Protection environnementale et politiques de d√©veloppement durable'
    ],
    
    init() {
        this.createNewsHTML();
        this.loadNews();
        this.setupTimers();
        console.log('‚úÖ News Manager initialis√©');
    },
    
    createNewsHTML() {
        if (document.querySelector('.news-banner')) return;
        
        const banner = document.createElement('div');
        banner.className = 'news-banner';
        banner.innerHTML = `
            <div class="news-status">
                <span class="status-indicator" id="status-indicator">‚óè</span>
                <span class="status-text" id="status-text">INITIALISATION...</span>
            </div>
            <div class="news-ticker-container">
                <div class="news-ticker" id="news-ticker">
                    üåê Connexion √† France24 en cours...
                </div>
            </div>
        `;
        
        document.body.insertBefore(banner, document.body.firstChild);
    },
    
    async loadNews() {
        if (this.isLoading) return;
        
        this.isLoading = true;
        this.updateStatus('loading', 'CONNEXION...');
        
        try {
            console.log('üì° Tentative de connexion √† France24 RSS...');
            
            const response = await fetch(CONFIG.rss.apiUrl);
            if (!response.ok) {
                throw new Error('Erreur HTTP ' + response.status);
            }
            
            const data = await response.json();
            if (data.status !== 'ok' || !data.items || data.items.length === 0) {
                throw new Error('Donn√©es RSS invalides ou vides');
            }
            
            this.currentNews = data.items
                .slice(0, CONFIG.rss.maxNews)
                .map(item => this.cleanHtmlTags(item.title))
                .filter(title => title.length > 5);
            
            this.hasError = false;
            this.updateStatus('live', 'LIVE FRANCE24');
            this.displayNews();
            
            console.log('‚úÖ ' + this.currentNews.length + ' actualit√©s France24 charg√©es');
            
        } catch (error) {
            console.error('‚ùå Erreur lors du chargement RSS:', error.message);
            this.handleError();
        } finally {
            this.isLoading = false;
        }
    },
    
    handleError() {
        this.hasError = true;
        this.currentNews = [...this.fallbackNews];
        this.updateStatus('error', 'Probl√®me pour r√©cup√©rer les informations');
        this.displayNews();
        console.log('üîÑ Basculement sur actualit√©s de secours activ√©');
    },
    
    cleanHtmlTags(text) {
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = text;
        return (tempDiv.textContent || tempDiv.innerText || '').trim();
    },
    
    updateStatus(type, text) {
        const indicator = document.getElementById('status-indicator');
        const statusText = document.getElementById('status-text');
        if (!indicator || !statusText) return;
        
        const statusConfig = {
            loading: { color: '#ffaa00', animation: 'none' },
            live: { color: '#00ff00', animation: 'pulse 2s infinite' },
            error: { color: '#ff6600', animation: 'pulse 1.5s infinite' }
        };
        
        const config = statusConfig[type] || statusConfig.loading;
        indicator.style.color = config.color;
        indicator.style.animation = config.animation;
        statusText.textContent = text;
    },
    
    displayNews() {
        const ticker = document.getElementById('news-ticker');
        if (!ticker || this.currentNews.length === 0) return;
        
        const newsContent = this.currentNews
            .map(news => '<span class="news-item">' + news + '</span>')
            .join(' ‚Ä¢ ');
        
        ticker.innerHTML = newsContent;
        
        // Reprendre l'animation si pas en scroll
        if (!PerformanceManager.isScrolledDown) {
            ticker.style.animationPlayState = 'running';
        }
    },
    
    shuffleNews() {
        if (this.currentNews.length <= 1) return;
        
        // Algorithme de Fisher-Yates pour m√©langer
        for (let i = this.currentNews.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [this.currentNews[i], this.currentNews[j]] = [this.currentNews[j], this.currentNews[i]];
        }
        
        this.displayNews();
        console.log('üîÄ Ordre des actualit√©s m√©lang√©');
    },
    
    setupTimers() {
        // Actualisation automatique toutes les 5 minutes
        this.refreshTimer = setInterval(() => {
            console.log('üîÑ Actualisation automatique des actualit√©s...');
            this.loadNews();
        }, CONFIG.rss.refreshInterval);
        
        // M√©lange automatique toutes les 2 minutes
        this.shuffleTimer = setInterval(() => {
            this.shuffleNews();
        }, CONFIG.rss.shuffleInterval);
    },
    
    // M√©thodes de contr√¥le manuel
    forceRefresh() {
        console.log('üîÑ Actualisation forc√©e demand√©e');
        this.loadNews();
    },
    
    forceShuffle() {
        console.log('üîÄ M√©lange forc√© demand√©');
        this.shuffleNews();
    }
};

// Contr√¥leur principal du Dashboard
const Dashboard = {
    initialized: false,
    
    init() {
        if (this.initialized) return;
        
        console.log('üöÄ === INITIALISATION DASHBOARD PLAN√âTAIRE ===');
        
        try {
            // Initialisation s√©quentielle
            PerformanceManager.init();
            NewsManager.init();
            
            // Outils de debug
            this.setupDebugTools();
            
            this.initialized = true;
            console.log('‚úÖ === DASHBOARD OP√âRATIONNEL ===');
            
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'initialisation:', error);
        }
    },
    
    setupDebugTools() {
        // Interface de debug accessible via console
        window.DashboardDebug = {
            refreshNews: () => NewsManager.forceRefresh(),
            shuffleNews: () => NewsManager.forceShuffle(),
            pauseAnimation: () => PerformanceManager.toggleNewsAnimation(true),
            resumeAnimation: () => PerformanceManager.toggleNewsAnimation(false),
            getStatus: () => ({
                newsCount: NewsManager.currentNews.length,
                hasError: NewsManager.hasError,
                isScrollPaused: PerformanceManager.newsTickerPaused,
                isLoading: NewsManager.isLoading
            }),
            showConfig: () => CONFIG
        };
        
        console.log('üõ†Ô∏è Outils de debug disponibles: window.DashboardDebug');
    }
};

// Initialisation automatique au chargement de la page
document.addEventListener('DOMContentLoaded', () => {
    // Petit d√©lai pour s'assurer que le CSS est charg√©
    setTimeout(() => {
        Dashboard.init();
    }, 100);
});

// Gestion des erreurs globales
window.addEventListener('error', (event) => {
    console.error('‚ùå Erreur JavaScript globale:', event.error);
});

// ================================================================
// GESTIONNAIRE MODALE POPULATION
// ================================================================

function openPopulationModal() {
    const modal = document.getElementById('population-modal');
    if (modal) {
        modal.classList.add('active');
        document.body.style.overflow = 'hidden'; // Emp√™cher le scroll du body
        console.log('üìä Modale population ouverte');
    } else {
        console.error('‚ùå Modale population non trouv√©e');
    }
}

function closePopulationModal() {
    const modal = document.getElementById('population-modal');
    if (modal) {
        modal.classList.remove('active');
        document.body.style.overflow = 'auto'; // Restaurer le scroll du body
        console.log('‚úÖ Modale population ferm√©e');
    } else {
        console.error('‚ùå Modale population non trouv√©e');
    }
}

// Fermer la modale en cliquant sur l'overlay
document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('population-modal');
    if (modal) {
        modal.addEventListener('click', (event) => {
            // Fermer seulement si on clique sur l'overlay, pas sur le contenu
            if (event.target === modal) {
                closePopulationModal();
            }
        });
    }
});

// Fermer la modale avec la touche √âchap
document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape') {
        const modal = document.getElementById('population-modal');
        if (modal && modal.classList.contains('active')) {
            closePopulationModal();
        }
    }
});

console.log('üìÑ Script Dashboard France24 - Pr√™t pour initialisation');